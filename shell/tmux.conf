# Inspired in big part by:
# https://github.com/tangledhelix/dotfiles/blob/master/tmux.conf

unbind -n C-b
unbind -n C-a
set-option -g prefix C-a
bind-key C-a last-window

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

###############################################################################
# General options

# Default termtype
set -g default-terminal "screen-256color"

# Ring the bell if any background window rang a bell
set -g bell-action any

# Watch for activity in background windows
setw -g monitor-activity on
set -g visual-activity on

# scrollback size
set -g history-limit 10000

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0


###############################################################################
# Keymapping

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."


###############################################################################
# Window management / moving around

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# auto window rename
set-window-option -g automatic-rename

# Highlight active window
# set-window-option -g window-status-current-bg red


###############################################################################
# Pane management / moving around

# more natural split window bindings
bind-key - split-window -v
bind-key _ split-window -v
bind-key | split-window -h

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'


###############################################################################
# Mouse mode
set-option -g mouse on


###########################################################################
# Color scheme

# # default statusbar colors
set-option -g status-bg default
set-option -g status-fg colour12
set-option -g status-interval 60
set-option -g status-attr default
set-option -g status-justify left

# window status
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-current-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-bg green
setw -g window-status-current-fg black
setw -g window-status-current-attr dim
#
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-bg colour0
setw -g window-status-fg colour11
setw -g window-status-attr reverse

# pane border
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51

# message text
set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour166

# status bar
set -g status-position bottom
set -g status-bg colour8
set -g status-fg colour137
set -g status-attr dim
set -g status-left ''
set -g status-right '#[fg=colour14] #(uptime | rev | cut -d "," -f 1 | rev | cut -d " " -f 5) | #(battery_percentage) | #(uptime | cut -f 3-6 -d " " | cut -f 1 -d ",") | #(LANG="fr_CA.UTF-8" date +%%a\ %%d\ %%b) | #(date +%%H:%%M) '
set -g status-right-length 50
set -g status-left-length 20

# modes
setw -g clock-mode-colour magenta
setw -g mode-attr bold
setw -g mode-fg colour196
setw -g mode-bg colour238

# bell
setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1
